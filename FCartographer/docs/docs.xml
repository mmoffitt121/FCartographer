<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FCartographer</name>
    </assembly>
    <members>
        <member name="T:FCartographer.Form1">
            <summary>
            Partial Class: Form1
            This part of Form1 controls the elevation brush settings
            </summary>
            <summary>
            The main user interface of the program.
            
            Holds the canvas, navigation menues, tool menues, and all non-dialogue ui elements used to interface with user projects.
            </summary>
            <summary>
            This part of Form1 is used for the bar at the top of the form, handling File, Edit, View, etc.
            </summary>
            <summary>
            This part of Form one handles interaction with the landscape generation menu.
            </summary>
            <summary>
            This part of Form1 is used for Layer control
            </summary>
            <summary>
            This part of Form1 handles the nation display.
            </summary>
            <summary>
            This part of Form1 is used for navigating the canvas; zoom, scroll, etc.
            </summary>
            <summary>
            This part of Form1 controls the visibility of the panels
            </summary>
            <summary>
            This part of Form1 is used for choosing what tool is selected
            </summary>
        </member>
        <member name="M:FCartographer.Form1.StrengthControl_Scroll(System.Object,System.EventArgs)">
            <summary>
            Sets the opacity for the Terrain Brush from Terrain Brush strength Slider
            </summary>
        </member>
        <member name="M:FCartographer.Form1.SizeControl_Scroll(System.Object,System.EventArgs)">
            <summary>
            Sets the size for the Terrain Brush from Terrain Brush size Slider
            </summary>
        </member>
        <member name="M:FCartographer.Form1.HeightControl_Scroll(System.Object,System.EventArgs)">
            <summary>
            Sets the Target Height for the Terrain Brush from Terrain Brush size Slider
            </summary>
        </member>
        <member name="M:FCartographer.Form1.NationsSizeControl_Scroll(System.Object,System.EventArgs)">
            <summary>
            Initializes Form1
            </summary>
        </member>
        <member name="F:FCartographer.Form1.project">
            <summary>
            Current project 
            </summary>
        </member>
        <member name="F:FCartographer.Form1.g">
            <summary>
            Graphics to interface with project
            </summary>
        </member>
        <member name="F:FCartographer.Form1.painting">
            <summary>
            Boolean to store if use has mouse down on canvas
            </summary>
        </member>
        <member name="F:FCartographer.Form1.terrain_brushpreset">
            <summary>
            Holds current selected terrain brush
            </summary>
        </member>
        <member name="F:FCartographer.Form1.nations_brushpreset">
            <summary>
            Holds current selected terrain brush
            </summary>
        </member>
        <member name="F:FCartographer.Form1.xprime">
            <summary>
            Integers depicting the previous mouse location one frame before
            </summary>
        </member>
        <member name="F:FCartographer.Form1.xbegin">
            <summary>
            Integers depicting the previous mouse location at the beginning of the brush stroke
            </summary>
        </member>
        <member name="M:FCartographer.Form1.Canvas_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse clicks on the canvas
            </summary>
        </member>
        <member name="M:FCartographer.Form1.Canvas_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse releases
            </summary>
        </member>
        <member name="M:FCartographer.Form1.Canvas_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse moves
            </summary>
        </member>
        <member name="M:FCartographer.Form1.BrushTool(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Brush tool
            Draws on the canvas based on user mouse args variable e
            </summary>
        </member>
        <member name="M:FCartographer.Form1.RenderGraphics(System.Drawing.Bitmap)">
            <summary>
            Draws rendered graphics to the canvas
            Input: Bitmap display -> Already rendered graphics to display to user
            </summary>
        </member>
        <member name="M:FCartographer.Form1.NewProject(System.Int32,System.Int32)">
            <summary>
            Creates a new project
            Input:  int width -> Project width
                    int height -> Project height
            </summary>
        </member>
        <member name="M:FCartographer.Form1.#ctor">
            <summary>
            Initializes Form1
            </summary>
        </member>
        <member name="F:FCartographer.Form1.components">
            <summary>
             Required designer variable.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.Dispose(System.Boolean)">
            <summary>
             Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FCartographer.Form1.InitializeComponent">
            <summary>
             Required method for Designer support - do not modify
             the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.newToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Create new file
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FCartographer.Form1.InitializeLayerAdder">
            <summary>
            Initializes Menu for adding new layer
            </summary>
        </member>
        <member name="M:FCartographer.Form1.AddLayer_Click(System.Object,System.EventArgs)">
            <summary>
            Adds a layer to the project
            </summary>
        </member>
        <member name="M:FCartographer.Form1.DisplayLayers">
            <summary>
            Places a panel for each layer in the layer pane for user navigation.
            Also places references to each layer panel object in List of layer display objects.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.ClearLayerPane">
            <summary>
            Calls Dispose() on every Layer Panel in the viewer
            </summary>
        </member>
        <member name="M:FCartographer.Form1.LayerPanelChild_Select(System.Object,System.EventArgs)">
            <summary>
            Event that fires when a child of a layer pane is clicked.
            
            This allows the user to click anywhere on a layer rather than just the empty space in the background.
            
            Gets the layer pane, then calls LayerPanel_Select, which is the event that fires when the user clicks on the panel normally.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.LayerPanel_Select(System.Object,System.EventArgs)">
            <summary>
            Event that fires when a layer pane is clicked. It calls project.SelectLayer() to select the layer clicked.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.UpdateLayerBrushes">
            <summary>
            Keeps current layer brush up to date with user control.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.DisplaySelectedLayer">
            <summary>
            Turns all layers the default layer panel color, and colors the currently selected the selected layer color.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.DeleteLayer_Click(System.Object,System.EventArgs)">
            <summary>
            Event that fires when a delete layer button was clicked. Calls the project object to delete the selected layer.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.LayerUp_Click(System.Object,System.EventArgs)">
            <summary>
            Event that fires when a move layer up button was clicked. Calls the project object to switch the selected layer with the one above.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.LayerDown_Click(System.Object,System.EventArgs)">
            <summary>
            Event that fires when a move layer down button was clicked. Calls the project object to switch the selected layer with the one below.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.DisplayNations">
            <summary>
            Places a panel for each nation in the nation pane for user navigation.
            Also places references to each nation panel object in List of nation display objects.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.ClearNationsPane">
            <summary>
            Calls Dispose() on every Nation Panel in the viewer
            </summary>
        </member>
        <member name="M:FCartographer.Form1.DisplaySelectedNation">
            <summary>
            Updates the nation gui to highlight the selected nation
            </summary>
        </member>
        <member name="M:FCartographer.Form1.UpdateCanvasLocation">
            <summary>
            Applies this class' internal canvas location to the canvas
            </summary>
        </member>
        <member name="M:FCartographer.Form1.SetCanvasLocation(System.Int32,System.Int32)">
            <summary>
            Sets this class' internal canvas value.
            input:  int x -> x value of desired canvas location
                    int y -> y value of desired canvas location
            </summary>
        </member>
        <member name="M:FCartographer.Form1.SetCanvasXLocation(System.Int32)">
            <summary>
            Sets the x value of this class' internal canvas value.
            input:  int x -> x value of desired canvas location
            </summary>
        </member>
        <member name="M:FCartographer.Form1.SetCanvasYLocation(System.Int32)">
            <summary>
            Sets the y value of this class' internal canvas value.
            input:  int y -> y value of desired canvas location
            </summary>
        </member>
        <member name="M:FCartographer.Form1.CenterCanvas">
            <summary>
            Centers the canvas.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.Form1_Resize(System.Object,System.EventArgs)">
            <summary>
            Places canvas when resizing window
            </summary>
        </member>
        <member name="M:FCartographer.Form1.ZoomIn_Click(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Zooms in on canvas when button is clicked
            </summary>
        </member>
        <member name="M:FCartographer.Form1.ScrollVertically(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Changes canvas y based on scrollbar
            </summary>
        </member>
        <member name="M:FCartographer.Form1.ScrollHorizontally(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Changes canvas x based on scrollbar
            </summary>
        </member>
        <member name="M:FCartographer.Form1.SetScrollbarDimensions">
            <summary>
            Sets the dimension of the scroll bar based on the Canvas width, height, and the LargeChange variable in each.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.SetScrollIncrement(System.Int32)">
            <summary>
            Sets the LargeChange and SmallChange values of each scrollbar
            </summary>
        </member>
        <member name="M:FCartographer.Form1.SetScrollMargin(System.Int32)">
            <summary>
            Sets how far beyond the canvas the user can scroll
            </summary>
        </member>
        <member name="M:FCartographer.Form1.HorizontalScroll_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Re-compiles the graphcis when scrolling horizontally.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.VerticalScroll_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Re-compiles the graphcis when scrolling vertically.
            </summary>
        </member>
        <member name="M:FCartographer.Form1.SetCurrentTool(FCartographer.Form1.ToolSelected)">
            <summary>
            Sets the current selected tool enum
            </summary>
        </member>
        <member name="M:FCartographer.Form1.GetCurrentTool">
            <summary>
            Returns the current selected tool
            </summary>
        </member>
        <member name="M:FCartographer.Form1.BrushSelect_Click(System.Object,System.EventArgs)">
            <summary>
            Selects the brush tool, event listener
            </summary>
        </member>
        <member name="M:FCartographer.Form1.FillSelect_Click(System.Object,System.EventArgs)">
            <summary>
            Selects the fill tool, event listener
            </summary>
        </member>
        <member name="M:FCartographer.Form1.AddObjectButton_Click(System.Object,System.EventArgs)">
            <summary>
            What happens when the add nation/other button is clicked
            </summary>
        </member>
        <member name="M:FCartographer.Form1.ResetToolButtonColors">
            <summary>
            Sets tool buttons to default color
            </summary>
        </member>
        <member name="T:FCartographer.Form1.ToolSelected">
            <summary>
            Enum that holds each type of tool in the program
            </summary>
        </member>
        <member name="F:FCartographer.Form1.ToolSelected.brush">
            <summary>
            Brush tool
            </summary>
        </member>
        <member name="F:FCartographer.Form1.ToolSelected.fill">
            <summary>
            Fill tool
            </summary>
        </member>
        <member name="T:FCartographer.ErosionSimulator">
            <summary>
            Erosion simulator class, simulates erosion on a heightmap.
            </summary>
        </member>
        <member name="M:FCartographer.ErosionSimulator.Generate">
            <summary>
            Performs erosion simulation 
            </summary>
        </member>
        <member name="M:FCartographer.ErosionSimulator.#ctor(System.Drawing.Bitmap)">
            <summary>
            ErosionSimulator constructor
            </summary>
            <param name="_data"></param>
        </member>
        <member name="T:FCartographer.Generator">
            <summary>
            Generator base class, used to generate layers.
            </summary>
        </member>
        <member name="M:FCartographer.Generator.Generate">
            <summary>
            Overwritable function that performs the layer processes.
            </summary>
        </member>
        <member name="M:FCartographer.Generator.SetRandom(System.Int32)">
            <summary>
            Sets the random number generator to an input seed
            </summary>
            <param name="seed"></param>
        </member>
        <member name="M:FCartographer.Generator.SetRandom(System.Random)">
            <summary>
            Sets the random seed
            </summary>
            <param name="_rand"></param>
        </member>
        <member name="M:FCartographer.Generator.GetRandom">
            <summary>
            Returns the inner random number generator
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCartographer.Generator.GetData">
            <summary>
            Returns the bitmap data reference stored in the generator
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCartographer.Generator.#ctor(System.Drawing.Bitmap)">
            <summary>
            Generator constructor
            </summary>
            <param name="_data"></param>
        </member>
        <member name="T:FCartographer.LandGenerator">
            <summary>
            Generator base class, used to generate layers. Will use unsafe functions.
            </summary>
        </member>
        <member name="M:FCartographer.LandGenerator.Generate">
            <summary>
            Overwritable function that performs the layer processes.
            </summary>
        </member>
        <member name="M:FCartographer.LandGenerator.#ctor(System.Drawing.Bitmap)">
            <summary>
            Generator constructor
            </summary>
            <param name="_data"></param>
        </member>
        <member name="T:FCartographer.NoiseGenerator">
            <summary>
            Generator base class, used to generate layers.
            </summary>
        </member>
        <member name="M:FCartographer.NoiseGenerator.Generate">
            <summary>
            Overwritable function that performs the layer processes.
            </summary>
        </member>
        <member name="M:FCartographer.NoiseGenerator.PerlinNoise">
            <summary>
            Perlin noise function
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCartographer.NoiseGenerator.PerlinPoint(System.Double,System.Double)">
            <summary>
            Function that calculates a single point of perlin noise
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:FCartographer.NoiseGenerator.Randomize(System.Int32)">
            <summary>
            Randomizes the perlin noise based on an input seed.
            </summary>
        </member>
        <member name="M:FCartographer.NoiseGenerator.Randomize">
            <summary>
            Randomizes the perlin noise based on an input seed.
            </summary>
        </member>
        <member name="M:FCartographer.NoiseGenerator.Shuffle(System.Int32[],System.Random)">
            <summary>
            Shuffles an integer array
            </summary>
            <param name="toshuffle"></param>
            <param name="rand"></param>
        </member>
        <member name="M:FCartographer.NoiseGenerator.Swap(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Swaps two elements in an integer array
            </summary>
            <param name="arr"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:FCartographer.NoiseGenerator.SetOctives(System.Int32)">
            <summary>
            Sets the amount of octives to use in the noise generation
            </summary>
            <param name="_octives"></param>
        </member>
        <member name="M:FCartographer.NoiseGenerator.SetPersistance(System.Double)">
            <summary>
            Sets the persistence value of lower levels of noise
            </summary>
            <param name="_persistence"></param>
        </member>
        <member name="M:FCartographer.NoiseGenerator.#ctor(System.Drawing.Bitmap)">
            <summary>
            Generator constructor
            </summary>
            <param name="_data"></param>
        </member>
        <member name="M:FCartographer.NoiseGenerator.#ctor(System.Drawing.Bitmap,System.Random)">
            <summary>
            Generator constructor
            </summary>
            <param name="_data"></param><param name="rand"></param>
        </member>
        <member name="T:FCartographer.NoiseGenerator.NoiseMode">
            <summary>
            Enum for type of noise to generate
            </summary>
        </member>
        <member name="F:FCartographer.NoiseGenerator.NoiseMode.Perlin">
            <summary>
            Perlin Noise setting, layered
            </summary>
        </member>
        <member name="F:FCartographer.NoiseGenerator.NoiseMode.White">
            <summary>
            White Noise setting
            </summary>
        </member>
        <member name="T:FCartographer.HeightLayer">
            <summary>
            Layer that holds and interfaces with data for heightmaps.
            </summary>
        </member>
        <member name="M:FCartographer.HeightLayer.Render">
            <summary>
            Override void that composits temp data to the layer.
            </summary>
        </member>
        <member name="M:FCartographer.HeightLayer.Draw(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Override void that Draws on a temporary layer. Bitmap is cleared when drawing is complete.
            </summary>
        </member>
        <member name="M:FCartographer.HeightLayer.DrawTemp(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Drawing.Graphics,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Override void that Draws on the display canvas. Bitmap is cleared when drawing is complete.
            </summary>
        </member>
        <member name="M:FCartographer.HeightLayer.Fill(System.Windows.Forms.MouseEventArgs,FCartographer.BrushPreset)">
            <summary>
            Will fill a region, unimplemented.
            </summary>
        </member>
        <member name="M:FCartographer.HeightLayer.SetColor(System.Drawing.Color)">
            <summary>
            Override void that sets the internal layer saved color.
            </summary>
        </member>
        <member name="M:FCartographer.HeightLayer.#ctor(System.Int32,System.Int32)">
            <summary>
            Unnamed constructor, creates layer of size x and y. Inherits base constructor.
            </summary>
        </member>
        <member name="M:FCartographer.HeightLayer.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Named constructor, creates layer of size x and y, and an input name. Inherits base constructor.
            </summary>
        </member>
        <member name="T:FCartographer.Layer">
            <summary>
            Abstract class that holds the base data for all layertypes.
            </summary>
        </member>
        <member name="F:FCartographer.Layer.typename">
            <summary>
            The name of the type of layer
            </summary>
        </member>
        <member name="F:FCartographer.Layer.typedescription">
            <summary>
            Describes the type of layer
            </summary>
        </member>
        <member name="F:FCartographer.Layer.data_g">
            <summary>
            Graphics Object for interfacing with layer data.
            </summary>
        </member>
        <member name="F:FCartographer.Layer.g">
            <summary>
            Graphics Object for interfacing with temporary layer data.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.GetWidth">
            <summary>
            Returns the width of the layer.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.GetHeight">
            <summary>
            Returns the Height.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.ToRender">
            <summary>
            Returns whether the layer will be rendered or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCartographer.Layer.SetToRender(System.Boolean)">
            <summary>
            Sets whether the layer will be rendered or not
            </summary>
            <param name="_torender"></param>
        </member>
        <member name="M:FCartographer.Layer.ToggleRender">
            <summary>
            Toggles whether layer is rendered
            </summary>
        </member>
        <member name="M:FCartographer.Layer.Visible">
            <summary>
            Returns whether the layer will be visible or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCartographer.Layer.SetVisible(System.Boolean)">
            <summary>
            Sets whether the layer will be rendered or not
            </summary>
            <param name="_visible"></param>
        </member>
        <member name="M:FCartographer.Layer.ToggleVisible">
            <summary>
            Toggles whether the layer is visible
            </summary>
        </member>
        <member name="M:FCartographer.Layer.Render">
            <summary>
            Overridden in subclasses, called to composite changes and render output.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.GetData">
            <summary>
            Returns the base data of the bitmap.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.GetTempData">
            <summary>
            Returns the tempdata, where changes are temporarily stored before being applied to the base data.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.GetOutData">
            <summary>
            Returns reference to the post-rendering data
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCartographer.Layer.SetType(FCartographer.Layer.LayerType)">
            <summary>
            Sets the type of the layer.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.GetType">
            <summary>
            Returns the type of the layer
            </summary>
        </member>
        <member name="M:FCartographer.Layer.SetName(System.String)">
            <summary>
            Sets the name of the layer
            </summary>
        </member>
        <member name="M:FCartographer.Layer.Name">
            <summary>
            Returns the name of the layer
            </summary>
        </member>
        <member name="M:FCartographer.Layer.Draw(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Overridden in subclasses, called to draw to data using input brush.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.DrawTemp(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Drawing.Graphics,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Overridden in subclasses, called to draw to temp data using input brush.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.SetColor(System.Drawing.Color)">
            <summary>
            Overridden in subclasses, sets the color of the layer.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.SetSize(System.Int32)">
            <summary>
            Overridden in subclasses, sets the size of internal layer brush and pen.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.UpdateBrushOptions(FCartographer.BrushPreset)">
            <summary>
            Overridden in subclasses, changes internal layer values based on selected input brush.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.Fill(System.Windows.Forms.MouseEventArgs,FCartographer.BrushPreset)">
            <summary>
            Overridden in subclasses, called to fill a region in data.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.#ctor(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Unnamed constructor, creates layer of size x and y.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.#ctor(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Named constructor, creates layer of size x and y, and an input name.
            </summary>
        </member>
        <member name="T:FCartographer.Layer.LayerType">
            <summary>
            Type enum, expresses the type of the layer.
            </summary>
        </member>
        <member name="F:FCartographer.Layer.LayerType.HeightMap">
            <summary>
            HeightMap layer, also known as Terrain Layer.
            </summary>
        </member>
        <member name="F:FCartographer.Layer.LayerType.Ocean">
            <summary>
            Ocean layer, displays an ocean at a specified height.
            </summary>
        </member>
        <member name="F:FCartographer.Layer.LayerType.NationMap">
            <summary>
            NationMap, holds nation data.
            </summary>
        </member>
        <member name="F:FCartographer.Layer.LayerType.Subdivision">
            <summary>
            Subdivision, for other subdivisions aside from NationMap.
            </summary>
        </member>
        <member name="F:FCartographer.Layer.LayerType.Reference">
            <summary>
            Reference, for imported images/annotations/sketches
            </summary>
        </member>
        <member name="M:FCartographer.Layer.Dispose(System.Boolean)">
            <summary>
            Inherits IDisposable, needs to be overridden in all subclasses.
            </summary>
        </member>
        <member name="M:FCartographer.Layer.Dispose">
            <summary>
            Function to call for disposal.
            </summary>
        </member>
        <member name="T:FCartographer.Nation">
            <summary>
            Class that holds the data for a particular nation.
            
            Tip: All colors should have Alpha value of 255.
            </summary>
        </member>
        <member name="M:FCartographer.Nation.SetColor(System.Drawing.Color)">
            <summary>
            Color mutator
            </summary>
        </member>
        <member name="M:FCartographer.Nation.GetColor">
            <summary>
            Color accessor
            </summary>
        </member>
        <member name="M:FCartographer.Nation.SetDataColor(System.Drawing.Color)">
            <summary>
            Data Color mutator
            </summary>
        </member>
        <member name="M:FCartographer.Nation.GetDataColor">
            <summary>
            Data color accessor
            </summary>
        </member>
        <member name="M:FCartographer.Nation.SetName(System.String)">
            <summary>
            Name mutator
            </summary>
        </member>
        <member name="M:FCartographer.Nation.GetName">
            <summary>
            Name accessor
            </summary>
        </member>
        <member name="M:FCartographer.Nation.#ctor(System.Collections.Generic.List{FCartographer.Nation})">
            <summary>
            Nation constructor, builds nation of random color and new name.
            </summary>
        </member>
        <member name="T:FCartographer.NationLayer">
            <summary>
            Layer that holds and interfaces with data for nation maps.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.Render">
            <summary>
            Override void that composits temp data to the layer.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.Draw(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Override void that Draws on a temporary layer. Bitmap is cleared when drawing is complete.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.DrawTemp(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Drawing.Graphics,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Override void that Draws on the display canvas. Bitmap is cleared when drawing is complete.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.Fill(System.Windows.Forms.MouseEventArgs,FCartographer.BrushPreset)">
            <summary>
            Fills contiguous region with pixels of selected nation.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.DrawToCanvas(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Drawing.Graphics,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Generalized draw to canvas function, used by both Draw() and DrawTemp(). Used to draw on canvas based
            on input brush settings, as well as mouse location and movement.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.SetColor(System.Drawing.Color)">
            <summary>
            Override void that sets the internal layer saved color.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.InitializeColor(System.Drawing.Color)">
            <summary>
            Override void that initializes the internal layer saved color without interacting with the layer's 
            internal pen.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.SetSize(System.Int32)">
            <summary>
            Override void that sets the internal layer saved pen.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.UpdateBrushOptions(FCartographer.BrushPreset)">
            <summary>
            Grabs internal brush options from the input layer.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.NewNation">
            <summary>
            Creates new nation with random data color.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.GetNationCount">
            <summary>
            Returns the amount of items in the intenal nation list
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.GetSelected">
            <summary>
            Returns the index of the selected nation
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.SelectNation(System.Int32)">
            <summary>
            Changes the index of layer to be selected
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.IsSelected(System.Int32)">
            <summary>
            Checks if an index is selected
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.GetNation(System.Int32)">
            <summary>
            Gets a nation by it's index in the nations list. If index too high, return null.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.#ctor(System.Int32,System.Int32)">
            <summary>
            Unnamed constructor, creates layer of size x and y. Inherits base constructor.
            </summary>
        </member>
        <member name="M:FCartographer.NationLayer.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Named constructor, creates layer of size x and y, and an input name. Inherits base constructor.
            </summary>
        </member>
        <member name="M:FCartographer.Program.Main">
            <summary>
             The main entry point for the application.
            </summary>
        </member>
        <member name="T:FCartographer.Project">
            <summary>
            Holds project data including dimensions, layers, and data interfaces.
            </summary>
        </member>
        <member name="M:FCartographer.Project.AddLayer(FCartographer.Layer.LayerType)">
            <summary>
            Adds nameless layer based on input type enum value
            </summary>
        </member>
        <member name="M:FCartographer.Project.AddLayer(FCartographer.Layer.LayerType,System.String)">
            <summary>
            Adds named layer based on input type enum value and input name
            </summary>
        </member>
        <member name="M:FCartographer.Project.DeleteLayer(System.Int32)">
            <summary>
            Disposes of layer at specified index
            </summary>
        </member>
        <member name="M:FCartographer.Project.SwapLayers(System.Int32,System.Int32)">
            <summary>
            Swaps order of two layers
            </summary>
        </member>
        <member name="M:FCartographer.Project.SetCanvasSize(System.Int32,System.Int32)">
            <summary>
            Sets size of project canvas
            </summary>
        </member>
        <member name="M:FCartographer.Project.SelectLayer(System.Int32)">
            <summary>
            Selects layer of specified index
            </summary>
        </member>
        <member name="M:FCartographer.Project.Draw(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Calls the specified layer's Draw() function
            </summary>
        </member>
        <member name="M:FCartographer.Project.DrawTemp(FCartographer.BrushPreset,System.Windows.Forms.MouseEventArgs,System.Drawing.Graphics,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Calls the specified layer's DrawTemp() function
            </summary>
        </member>
        <member name="M:FCartographer.Project.Fill(System.Windows.Forms.MouseEventArgs,FCartographer.BrushPreset)">
            <summary>
            Calls specified layer's Fill() function, which fills a region with the user-selected color
            </summary>
        </member>
        <member name="M:FCartographer.Project.CurrentLayer">
            <summary>
            Returns the currently selected layer
            </summary>
        </member>
        <member name="M:FCartographer.Project.GetCurrentIndex">
            <summary>
            Gets the index of the current selected layer
            </summary>
        </member>
        <member name="M:FCartographer.Project.GetLayer(System.Int32)">
            <summary>
            Returns layer at a specific index
            </summary>
        </member>
        <member name="M:FCartographer.Project.GetLayerCount">
            <summary>
            Returns amount of layers
            </summary>
        </member>
        <member name="M:FCartographer.Project.GetGraphics">
            <summary>
            Returns all layers rendered and composited.
            </summary>
        </member>
        <member name="M:FCartographer.Project.CompositeLayers">
            <summary>
            Composits layers together
            </summary>
        </member>
        <member name="M:FCartographer.Project.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor, creates project object of specified width and height
            </summary>
        </member>
        <member name="T:FCartographer.ProjectSettings">
            <summary>
            Class that contains the project settings.
            </summary>
        </member>
        <member name="M:FCartographer.ProjectSettings.#ctor">
            <summary>
            Project Settings Constructor, default variables.
            </summary>
        </member>
        <member name="T:FCartographer.DirectionalTerrainShader">
            <summary>
            Shader that extends terrainshader, shades terrain based on input direction.
            </summary>
        </member>
        <member name="T:FCartographer.NationStrokeRenderer">
            <summary>
            Renderer class, used to render parts of layers. Will usually utilize unsafe functions.
            </summary>
        </member>
        <member name="F:FCartographer.NationStrokeRenderer.stokewidth">
            <summary>
            Holds the width of the stroke
            </summary>
        </member>
        <member name="F:FCartographer.NationStrokeRenderer.color">
            <summary>
            Holds the color of the stroke
            </summary>
        </member>
        <member name="M:FCartographer.NationStrokeRenderer.Render">
            <summary>
            Renders the stroke layer
            </summary>
        </member>
        <member name="M:FCartographer.NationStrokeRenderer.#ctor(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Constructor, takes bitmap for reading
            </summary>
        </member>
        <member name="T:FCartographer.Renderer">
            <summary>
            Renderer class, used to render parts of layers. Will usually utilize unsafe functions.
            </summary>
        </member>
        <member name="M:FCartographer.Renderer.Render">
            <summary>
            Responsible for rendering layer based on input data.
            </summary>
        </member>
        <member name="M:FCartographer.Renderer.GetData">
            <summary>
            Returns the base data held in the renderer
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCartographer.Renderer.GetOutput">
            <summary>
            Returns the output data held in the renderer
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCartographer.Renderer.#ctor(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Renderer constructor, passes a reference of the data to render into the renderer object.
            </summary>
        </member>
        <member name="T:FCartographer.TerrainShader">
            <summary>
            Shader responsible for terrain layers
            </summary>
        </member>
        <member name="T:FCartographer.AreaSelector">
            <summary>
            Responsible for selecting an area on canvas based on color difference
            
            !!! - WARNING - !!! All of the functions in this class are UNSAFE CLASSES. This means that they deal with POINTERS, and you
            SHOULDN'T MESS WITH THEM unless you ABSOLUTELY KNOW WHAT YOU'RE DOING.
            </summary>
        </member>
        <member name="M:FCartographer.AreaSelector.FillAreaContiguous(System.Drawing.Bitmap,System.Drawing.Point,FCartographer.BrushPreset)">
            <summary>
            Returns a bitmap object filled based on mouse location and layer data.
            
            Selection is contiguous, meaning only one region will be selected.
            
            Utilizes seed fill algorithm:
            
            Init: Initialize stack of pointers to store pixel locations, target color, y-integer, boolean left and right.
                - Push cursor point into the stack
            While stack != empty
                - Pop, set y-integer to popped point
                - While y-integer > 0, and pixel x, y-integer = target color, decrement y-integer
                - increment y-integer
                - left and right = false
                - While y-integer less than height and pixel x, y-integer = targetcolor
                    - replace color (x, y1)
                    - if !left and x > 0 and pixel(x-1, y-integer) = target
                        - push pointer (x-1, yinteger) and left = true
                    - else, if left = true and x-1 is 0, and getpixel != target
                        - stop moving left
                    - Same thing, but going right
                - Return new data
            
            Generates image to overlay onto original image.
            </summary>
        </member>
        <member name="M:FCartographer.AreaSelector.PointToPointer(System.Int32,System.Int32,System.Byte*,System.Int32,System.Int32)">
            <summary>
            Converts a point on a bitmap to a pointer in memory.
            </summary>
        </member>
        <member name="M:FCartographer.AreaSelector.PointerToPoint(System.Byte*,System.Byte*,System.Int32,System.Int32)">
            <summary>
            Converts a pointer to a pixel on a bitmap to a point object.
            </summary>
        </member>
        <member name="M:FCartographer.AreaSelector.IsValid(System.Byte*,System.Drawing.Color)">
            <summary>
            Detects if a color is equal to a byte* pixel on a bitmap.
            </summary>
        </member>
        <member name="M:FCartographer.AreaSelector.ChangeColor(System.Byte*,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Changes the color of a point on a bitmap.
            </summary>
        </member>
        <member name="T:FCartographer.BrushPreset">
            <summary>
            BrushPreset Class, holds brush data. Brush data should be imported by file, and saved when created.
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.SetImage(System.String,System.Int32,System.Drawing.Color)">
            <summary>
            Brush image mutator, image, opacity, and color overload
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.SetImage(System.Drawing.Bitmap)">
            <summary>
            Brush image mutator, image overload
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.SetImage(System.String)">
            <summary>
            Brush image mutator, brush path location overload
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.GetImage">
            <summary>
            Brush image accessor
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.SetSize(System.Int32)">
            <summary>
            Aize value mutator
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.SetColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Color value mutator, int triplet overload
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.SetColor(System.Drawing.Color)">
            <summary>
            Color value mutator, Color type overload
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.GetColor">
            <summary>
            Size value mutator
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.GetSize">
            <summary>
            Size value accessor
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.SetOpacity(System.Int32)">
            <summary>
            Opacity value mutator
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.GetOpacity">
            <summary>
            Opacity value accessor
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.CalculateOutputBrush">
            <summary>
            Calculates the color and opacity of the output brush
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.SetSolidify(System.Boolean)">
            <summary>
            Sets if the brush is to have hard edges
            </summary>
        </member>
        <member name="M:FCartographer.BrushPreset.#ctor(System.String,System.Int32,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            BrushPreset Constructor
            </summary>
        </member>
        <member name="T:FCartographer.NationsBrushPreset">
            <summary>
            Holds data for brushes used on nation layers
            </summary>
        </member>
        <member name="M:FCartographer.NationsBrushPreset.#ctor(System.String,System.Int32,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            Constructor for Nation layer-specific brushes. Ensures the brush's hardness.
            </summary>
        </member>
        <member name="T:FCartographer.TerrainBrushPreset">
            <summary>
            Holds data for brushes used on terrain layers
            </summary>
        </member>
        <member name="M:FCartographer.TerrainBrushPreset.#ctor(System.String,System.Int32,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            Brush preset constructor.
            </summary>
        </member>
        <member name="T:FCartographer.BitmapDataConverter">
            <summary>
            Responsible for converting bitmaps to different data types and vice versa.
            </summary>
        </member>
        <member name="M:FCartographer.BitmapDataConverter.GreyscaleBitmapToByteArray(System.Drawing.Bitmap)">
            <summary>
            Converts greyscale bitmap to byte array
            </summary>
        </member>
        <member name="M:FCartographer.BitmapDataConverter.DrawImage(System.Drawing.Bitmap,System.Byte[],System.Boolean)">
            <summary>
            Draws a byte array onto a bitmap. Greyscale or argb depending on greyscale param
            </summary>
            <param name="data"></param>
            <param name="bytes"></param>
            <param name="color"></param>
        </member>
        <member name="M:FCartographer.BitmapDataConverter.BitmapToByteArray(System.Drawing.Bitmap)">
            <summary>
            Converts bitmap to byte array
            </summary>
        </member>
        <member name="M:FCartographer.BitmapDataConverter.ByteArrayToBitmap(System.Byte[])">
            <summary>
            Converts from byte array to bitmap
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:FCartographer.ImageTypeConverter">
            <summary>
            Responsible for selecting an area on canvas based on color difference
            
            !!! - OBSOLETE - !!!
            </summary>
        </member>
        <member name="M:FCartographer.ImageTypeConverter.BmpToByte(System.Drawing.Bitmap)">
            <summary>
            Converts bitmap to byte array
            </summary>
        </member>
        <member name="T:FCartographer.PointerOps">
            <summary>
            Class holding pointer helper conversion functions. Uses unsafe functions.
            </summary>
        </member>
        <member name="M:FCartographer.PointerOps.PointToPointer(System.Int32,System.Int32,System.Byte*,System.Int32,System.Int32)">
            <summary>
            Converts a point on a bitmap to a pointer in memory.
            </summary>
        </member>
        <member name="M:FCartographer.PointerOps.PointerToPoint(System.Byte*,System.Byte*,System.Int32,System.Int32)">
            <summary>
            Converts a pointer to a pixel on a bitmap to a point object.
            </summary>
        </member>
        <member name="M:FCartographer.PointerOps.IsValid(System.Byte*,System.Drawing.Color)">
            <summary>
            Detects if a color is equal to a byte* pixel on a bitmap.
            </summary>
        </member>
        <member name="M:FCartographer.PointerOps.ChangeColor(System.Byte*,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Changes the color of a point on a bitmap.
            </summary>
        </member>
        <member name="T:FCartographer.AddLayerMenu">
            <summary>
            Window for adding a new layer with specified settings.
            
            This class, when instantiated, takes the parent form as input, and interfaces with the project.
            </summary>
        </member>
        <member name="F:FCartographer.AddLayerMenu.parentform">
            <summary>
            Holds the reference to the parent Form1 object, aka the main program.
            </summary>
        </member>
        <member name="M:FCartographer.AddLayerMenu.CreateLayerButton_Click(System.Object,System.EventArgs)">
            <summary>
            Adds a layer based on the layer type name in the LayerToAdd text input box
            </summary>
        </member>
        <member name="M:FCartographer.AddLayerMenu.CancelCreateLayerButton_Click(System.Object,System.EventArgs)">
            <summary>
            Closes window
            </summary>
        </member>
        <member name="M:FCartographer.AddLayerMenu.#ctor(FCartographer.Form1)">
            <summary>
            Constructor, takes parent Form1 as input.
            </summary>
        </member>
        <member name="F:FCartographer.AddLayerMenu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FCartographer.AddLayerMenu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FCartographer.AddLayerMenu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FCartographer.Window.LandscapeGeneratorWindow">
            <summary>
            Window that handles the user's interface with the landscape generator.
            </summary>
        </member>
        <member name="M:FCartographer.Window.LandscapeGeneratorWindow.GenerateRandomSeed">
            <summary>
            Generates a random seed for the landscape generator, called the first time the window is opened.
            </summary>
        </member>
        <member name="M:FCartographer.Window.LandscapeGeneratorWindow.GenerateButton_Click(System.Object,System.EventArgs)">
            <summary>
            Activates the generator.
            </summary>
        </member>
        <member name="M:FCartographer.Window.LandscapeGeneratorWindow.randomSeedButton_Click(System.Object,System.EventArgs)">
            <summary>
            Gives user a random seed when button pressed.
            </summary>
        </member>
        <member name="M:FCartographer.Window.LandscapeGeneratorWindow.#ctor(FCartographer.Form1)">
            <summary>
            Constructor, takes parent form as argument for interaction.
            </summary>
        </member>
        <member name="F:FCartographer.Window.LandscapeGeneratorWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FCartographer.Window.LandscapeGeneratorWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FCartographer.Window.LandscapeGeneratorWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FCartographer.Window.NewProjectWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FCartographer.Window.NewProjectWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FCartographer.Window.NewProjectWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
